var $biogenicsWebCalc_$Program=function(){};$biogenicsWebCalc_$Program.$main=function(){};var $biogenicsWebCalc_Missing_Missing=function(){};$biogenicsWebCalc_Missing_Missing.toInt32=function(a){return ss.Int32.trunc(a+0.5)};$biogenicsWebCalc_Missing_Missing.log10=function(a){return Math.log(a)/Math.LN10};var $UBM_biogenicsCal_CalculatorCore_CalculatorInfo=function(){this.$1$NameField=null;this.$1$DisplayNameField=null;this.$1$CategoriesField=null};$UBM_biogenicsCal_CalculatorCore_CalculatorInfo.prototype={get_name:function(){return this.$1$NameField},set_name:function(a){this.$1$NameField=a},get_displayName:function(){return this.$1$DisplayNameField},set_displayName:function(a){this.$1$DisplayNameField=a},get_categories:function(){return this.$1$CategoriesField},set_categories:function(a){this.$1$CategoriesField=a}};var $UBM_biogenicsCal_CalculatorCore_ChoiceItem=function(){this.$1$ValueField=null;this.$1$LabelField=null;this.$1$DataTypeField=null};$UBM_biogenicsCal_CalculatorCore_ChoiceItem.prototype={get_value:function(){return this.$1$ValueField},set_value:function(a){this.$1$ValueField=a},get_label:function(){return this.$1$LabelField},set_label:function(a){this.$1$LabelField=a},get_dataType:function(){return this.$1$DataTypeField},set_dataType:function(a){this.$1$DataTypeField=a}};var $UBM_biogenicsCal_CalculatorCore_FieldDefinition=function(){this.$1$NameField=null;this.$1$LabelField=null;this.$1$DataTypeField=null;this.$1$UnitStringField=null;this.$1$UnitTypeField=null;this.$1$YesValueField=null;this.$1$NoValueField=null;this.$1$ChoiceListField=null};$UBM_biogenicsCal_CalculatorCore_FieldDefinition.prototype={get_name:function(){return this.$1$NameField},set_name:function(a){this.$1$NameField=a},get_label:function(){return this.$1$LabelField},set_label:function(a){this.$1$LabelField=a},get_dataType:function(){return this.$1$DataTypeField},set_dataType:function(a){this.$1$DataTypeField=a},get_unitString:function(){return this.$1$UnitStringField},set_unitString:function(a){this.$1$UnitStringField=a},get_unitType:function(){return this.$1$UnitTypeField},set_unitType:function(a){this.$1$UnitTypeField=a},get_yesValue:function(){return this.$1$YesValueField},set_yesValue:function(a){this.$1$YesValueField=a},get_noValue:function(){return this.$1$NoValueField},set_noValue:function(a){this.$1$NoValueField=a},get_choiceList:function(){return this.$1$ChoiceListField},set_choiceList:function(a){this.$1$ChoiceListField=a}};var $UBM_biogenicsCal_CalculatorCore_ICalculator=function(){};$UBM_biogenicsCal_CalculatorCore_ICalculator.prototype={calculate:null};var $UBM_biogenicsCal_CalculatorCore_UnitManager=function(){this.$_unitTypeMap=new (Type.makeGenericType(ss.Dictionary$2,[String,Array]))();this.$_unitTypeMap.add("weight",["kg","lbs","g"]);this.$_unitTypeMap.add("height",["cm","m","feet","inches"]);this.$_unitTypeMap.add("pressure",["mm Hg","cm H₂O","kPa","bar","atm"]);this.$_unitTypeMap.add("mEqOrMmol",["mEq/L","mmol/L"]);this.$_unitTypeMap.add("albumin",["g/dL","g/L"]);this.$_unitTypeMap.add("hematocrit",["%","/ 1.0"]);this.$_unitTypeMap.add("temperature",["°C","°F"]);this.$_unitTypeMap.add("creatinine",["mg/dL","µmol/L"]);this.$_unitTypeMap.add("age",["years","months"]);this.$_unitTypeMap.add("ureanitrogen",["mg/dL","mmol/L"]);this.$_unitTypeMap.add("hemoglobin",["g/dL","g/L","mmol/L"]);this.$_unitTypeMap.add("bilirubin",["mg/dL","µmol/L"]);this.$_unitTypeMap.add("EKGTime",["msec","sec","boxes"]);this.$_unitTypeMap.add("calcium",["mg/dL","mEq/dL","mmol/L"]);this.$_unitTypeMap.add("phenytoin",["mg/dL","µmol/L"]);this.$_unitTypeMap.add("glucose",["mg/dL","mmol/L"]);this.$_unitTypeMap.add("volume",["mL","L","oz","cups","pints","qt","gal","tsp","tbsp"]);this.$_unitTypeMap.add("mediumLengthTime",["hours","days","minutes"]);this.$_unitTypeMap.add("shortLengthTime",["minutes","seconds","hours"]);this.$_unitTypeMap.add("ureaNitrogen",["mg/dL","mmol/L"]);this.$_unitTypeMap.add("cholesterol",["mg/dL","mmol/L"]);this.$_unitTypeMap.add("cysc",["mg/L","nmol/L"]);this.$_unitTypeMap.add("massPerTime",["mg","mcg","g","ng"]);this.$_unitTypeMap.add("mOsmOrMmolPerKg",["mOsm/kg","mmol/kg"])};$UBM_biogenicsCal_CalculatorCore_UnitManager.prototype={getUnitsOfType:function(a){return this.$_unitTypeMap.get_item(a)},convertToDefaultUnitValue:function(c,a,d){var b=0;if(c.equals("weight")){b=this.$convertWeight(a,d)}else{if(c.equals("height")){b=this.$convertHeight(a,d)}else{if(c.equals("pressure")){b=this.$convertPressure(a,d)}else{if(c.equals("mEqOrMmol")){b=a}else{if(c.equals("albumin")){b=this.$convertAlbumin(a,d)}else{if(c.equals("hematocrit")){b=this.$convertHematocrit(a,d)}else{if(c.equals("temperature")){b=this.$convertTemperature(a,d)}else{if(c.equals("creatinine")){b=this.$convertCreatinine(a,d)}else{if(c.equals("age")){b=this.$convertAge(a,d)}else{if(c.equals("ureanitrogen")){b=this.$convertUreanitrogen(a,d)}else{if(c.equals("hemoglobin")){b=this.$convertHemoglobin(a,d)}else{if(c.equals("bilirubin")){b=this.$convertBilirubin(a,d)}else{if(c.equals("EKGTime")){b=this.$convertEKGTime(a,d)}else{if(c.equals("calcium")){b=this.$convertCalcium(a,d)}else{if(c.equals("phenytoin")){b=this.$convertPhenytoin(a,d)}else{if(c.equals("glucose")){b=this.$convertGlucose(a,d)}else{if(c.equals("volume")){b=this.$convertVolume(a,d)}else{if(c.equals("mediumLengthTime")){b=this.$convertMediumLengthTime(a,d)}else{if(c.equals("shortLengthTime")){b=this.$convertShortLengthTime(a,d)}else{if(c.equals("ureaNitrogen")){b=this.$convertUreaNitrogen(a,d)}else{if(c.equals("cholesterol")){b=this.$convertCholesterol(a,d)}else{if(c.equals("cysc")){b=this.$convertCysc(a,d)}else{if(c.equals("massPerTime")){b=this.$convertMassPerTime(a,d)}else{if(c.equals("mOsmOrMmolPerKg")){b=a}}}}}}}}}}}}}}}}}}}}}}}}return b},$convertMassPerTime:function(a,c){var b=0;if(c.equals("mg")){b=a}else{if(c.equals("mcg")){b=a/1000}else{if(c.equals("g")){b=a*1000}else{if(c.equals("ng")){b=a*0.000001}}}}return b},$convertCysc:function(a,c){var b=0;if(c.equals("mg/L")){b=a}else{if(c.equals("nmol/L")){b=a*0.013359}}return b},$convertCholesterol:function(a,c){var b=0;if(c.equals("mg/dL")){b=a}else{if(c.equals("mmol/L")){b=a/0.0259}}return b},$convertUreaNitrogen:function(a,c){var b=0;if(c.equals("mg/dL")){b=a}else{if(c.equals("mmol/L")){b=a/0.357}}return b},$convertShortLengthTime:function(a,c){var b=0;if(c.equals("minutes")){b=a}else{if(c.equals("seconds")){b=a/60}else{if(c.equals("hours")){b=a*60}}}return b},$convertMediumLengthTime:function(a,c){var b=0;if(c.equals("hours")){b=a}else{if(c.equals("days")){b=a*24}else{if(c.equals("minutes")){b=a/60}}}return b},$convertVolume:function(a,c){var b=0;if(c.equals("mL")){b=a}else{if(c.equals("L")){b=a*1000}else{if(c.equals("oz")){b=a*29.57}else{if(c.equals("cups")){b=a*236.59}else{if(c.equals("pints")){b=a*473.18}else{if(c.equals("qt")){b=a*946.35}else{if(c.equals("gal")){b=a*3785.41}else{if(c.equals("tsp")){b=a*4.93}else{if(c.equals("tbsp")){b=a*14.79}}}}}}}}}return b},$convertGlucose:function(a,c){var b=0;if(c.equals("mg/dL")){b=a}else{if(c.equals("mmol/L")){b=a/0.0555}}return b},$convertPhenytoin:function(a,c){var b=0;if(c.equals("mg/dL")){b=a}else{if(c.equals("µmol/L")){b=a/3.96842105}}return b},$convertCalcium:function(a,c){var b=0;if(c.equals("mg/dL")){b=a}else{if(c.equals("mEq/dL")){b=a*2}else{if(c.equals("mmol/L")){b=a/0.25}}}return b},$convertEKGTime:function(a,c){var b=0;if(c.equals("msec")){b=a}else{if(c.equals("sec")){b=a*1000}else{if(c.equals("boxes")){b=a*200}}}return b},$convertBilirubin:function(a,c){var b=0;if(c.equals("mg/dL")){b=a}else{if(c.equals("µmol/L")){b=a/17.1}}return b},$convertHemoglobin:function(a,c){var b=0;if(c.equals("g/dL")){b=a}else{if(c.equals("g/L")){b=a/10}else{if(c.equals("mmol/L")){b=a/0.6206}}}return b},$convertUreanitrogen:function(a,c){var b=0;if(c.equals("mg/dL")){b=a}else{if(c.equals("mmol/L")){b=a/0.357}}return b},$convertAge:function(a,c){var b=0;if(c.equals("years")){b=a}else{if(c.equals("months")){b=a/12}}return b},$convertCreatinine:function(a,c){var b=0;if(c.equals("mg/dL")){b=a}else{if(c.equals("µmol/L")){b=a/88.4}}return b},$convertTemperature:function(a,c){var b=0;if(c.equals("°C")){b=a}else{if(c.equals("°F")){b=(a-32)*5/9}}return b},$convertHematocrit:function(a,c){var b=0;if(c.equals("%")){b=a}else{if(c.equals("/ 1.0")){b=a/0.01}}return b},$convertAlbumin:function(a,c){var b=0;if(c.equals("g/dL")){b=a}else{if(c.equals("g/L")){b=a/10}}return b},$convertWeight:function(a,c){var b=0;if(c.equals("kg")){b=a}else{if(c.equals("lbs")){b=a/2.20462262185}else{if(c.equals("g")){b=a/1000}}}return b},$convertHeight:function(a,c){var b=0;if(c.equals("cm")){b=a}else{if(c.equals("m")){b=a*100}else{if(c.equals("feet")){b=a*30.48}else{if(c.equals("inches")){b=a/12*30.48}}}}return b},$convertPressure:function(a,c){var b=0;if(c.equals("mm Hg")){b=a}else{if(c.equals("cm H₂O")){b=a*0.7355}else{if(c.equals("kPa")){b=a*7.5006}else{if(c.equals("bar")){b=a*750.2838}else{if(c.equals("atm")){b=a*760}}}}}return b}};var $UBM_biogenicsCal_CalculatorCore_ValidationError=function(){this.$1$InputIDField=0;this.$1$ErrorMessageField=null};$UBM_biogenicsCal_CalculatorCore_ValidationError.prototype={get_inputID:function(){return this.$1$InputIDField},set_inputID:function(a){this.$1$InputIDField=a},get_errorMessage:function(){return this.$1$ErrorMessageField},set_errorMessage:function(a){this.$1$ErrorMessageField=a}};var $UBM_biogenicsCal_Calculators_AbbreviatedMentalTestScoreCalculator=function(){};$UBM_biogenicsCal_Calculators_AbbreviatedMentalTestScoreCalculator.prototype={calculate:function(b){var e=0;var a=new Array(3);a[2]="";for(var d=0;d<b.length;d++){var c=b[d];if(c.equals("1")){e++}if(c.equals("")){a[2]="** Please provide answers to all the questions or the answer will be assumed as No."}}a[0]=e;if(e>6){a[1]="Normal"}else{if(e>3){a[1]="Moderate impairment"}else{a[1]="Severe impairment"}}return a}};var $UBM_biogenicsCal_Calculators_ABCDCalculator=function(){};$UBM_biogenicsCal_Calculators_ABCDCalculator.prototype={calculate:function(b){var a="";var c=0;c+=parseInt(Type.cast(b[0].toString(),String));c+=parseInt(Type.cast(b[1].toString(),String));c+=parseInt(Type.cast(b[2].toString(),String));c+=parseInt(Type.cast(b[3].toString(),String));switch(c){case 0:a="0%";break;case 1:a="<1%";break;case 2:a="<1%";break;case 3:a="<1%";break;case 4:a="<1%";break;case 5:a="12.1%";break;case 6:a="31.4%";break}return[c,a]}};var $UBM_biogenicsCal_Calculators_AllowableBloodLossCalculator=function(){};$UBM_biogenicsCal_Calculators_AllowableBloodLossCalculator.prototype={calculate:function(g){var f=new Array(1);var c=parseFloat(Type.cast(g[0],String));var j=parseFloat(Type.cast(g[1],String));var b=parseFloat(Type.cast(g[2],String));var l=Type.cast(g[3],String).equals("0");var i=Type.cast(g[3],String).equals("1");var e=Type.cast(g[3],String).equals("2");var h=Type.cast(g[3],String).equals("3");var d=Type.cast(g[3],String).equals("4");var a=0;var k=0;if(c!==0&&j!==0&&b!==0){if(l){a=95}if(i){a=85}if(e){a=80}if(h){a=70}if(d){a=65}k=b*a;f[0]=String.format("{0:F2} mL",(c-j)*k/c)}else{f[0]=""}return f}};var $UBM_biogenicsCal_Calculators_AlvaradoCalculator=function(){};$UBM_biogenicsCal_Calculators_AlvaradoCalculator.prototype={calculate:function(a){var e=0;for(var d=0;d<a.length;d++){var c=a[d];e+=parseInt(c)}var b=new Array(2);b[0]=e+" / 10";if(e<=4){b[1]="Acute appendicitis very unlikely"}else{if(e<=6){b[1]="Compatible with acute appendicitis but inconclusive for appendicectomy"}else{if(e<=8){b[1]="Probable acute appendicitis"}else{b[1]="Almost definite acute appendicitis"}}}return b}};var $UBM_biogenicsCal_Calculators_BicarbDeficitCalculator=function(){};$UBM_biogenicsCal_Calculators_BicarbDeficitCalculator.prototype={calculate:function(b){var d=parseFloat(Type.cast(b[0],String));var c=parseFloat(Type.cast(b[1],String));var a=((d!==0&&c!==0)?String.format("{0:F1}",0.5*c*(24-d)):"");return[a]}};var $UBM_biogenicsCal_Calculators_BishopScoreCalculator=function(){};$UBM_biogenicsCal_Calculators_BishopScoreCalculator.prototype={calculate:function(b){var a=0;for(var d=0;d<b.length;d++){var c=b[d];a+=parseInt(c)}return[a.toString()]}};var $UBM_biogenicsCal_Calculators_BMICalculator=function(){};$UBM_biogenicsCal_Calculators_BMICalculator.prototype={calculate:function(c){var e=new Array(2);var g=parseFloat(Type.cast(c[0],String));var b=parseFloat(Type.cast(c[1],String))/100;var f=g/(b*b);e[0]=String.format("{0:F1}",f);var a="";if(g<0||b<0){var d=new $UBM_biogenicsCal_CalculatorCore_ValidationError();if(g<0){d.set_inputID(0);d.set_errorMessage("Weight must be a positive number.")}else{d.set_inputID(1);d.set_errorMessage("Height must be a positive number.")}return[$UBM_biogenicsCal_CalculatorCore_ValidationError.erroR_TAG,d]}if(f>=30){a="Obese"}else{if(f>=25){a="Overweight"}else{if(f>=18.5){a="Normal"}else{a="Underweight"}}}e[1]=a;return e}};var $UBM_biogenicsCal_Calculators_BodySurfaceAreaCalculator=function(){};$UBM_biogenicsCal_Calculators_BodySurfaceAreaCalculator.prototype={calculate:function(c){var f=parseFloat(Type.cast(c[0],String));var e=parseFloat(Type.cast(c[1],String));if(f!==0&&e!==0){var d=String.format("{0:F2} m²",0.007184*Math.pow(f,0.725)*Math.pow(e,0.425));var b=String.format("{0:F2} m²",Math.pow(f*e/3600,0.5));var a=String.format("{0:F2} m²",0.024265*Math.pow(f,0.3964)*Math.pow(e,0.5378));return[d,b,a]}return["","",""]}};var $UBM_biogenicsCal_Calculators_BodySurfaceAreaWithoutHeightCalculator=function(){};$UBM_biogenicsCal_Calculators_BodySurfaceAreaWithoutHeightCalculator.prototype={calculate:function(b){var e=parseFloat(Type.cast(b[0],String))*1000;var d=parseFloat(Type.cast(b[0],String));if(e!==0&&d!==0){var c=String.format("{0:F2}",1321+0.3433*e);var a=String.format("{0:F2}",(d+4)/30);return[c,a]}return["",""]}};var $UBM_biogenicsCal_Calculators_BohrDeadSpaceCalculator=function(){};$UBM_biogenicsCal_Calculators_BohrDeadSpaceCalculator.prototype={calculate:function(a){var b=parseFloat(Type.cast(a[0],String));var e=parseFloat(Type.cast(a[1],String));var d="";var c="";if(b!==0&&e!==0){c=String.format("{0:F2}",(b-e)/b)}if(b<=e){d="** The Bohr’s Dead Space formula is based on the assumption that the value of P alveolar CO₂ is always greater than P expired CO₂."}return[c,d]}};var $UBM_biogenicsCal_Calculators_ChronotropicIndexCalculator=function(){};$UBM_biogenicsCal_Calculators_ChronotropicIndexCalculator.prototype={calculate:function(a){var e=parseFloat(Type.cast(a[0],String));var f=parseFloat(Type.cast(a[1],String));var b=parseFloat(Type.cast(a[2],String));var c="";var d="";if(e<=f){d="** In order to calculate the chronotropic index, the maximum exercise heart rate of a patient should always be greater than the resting heart rate."}if(e!==0&&f!==0&&b!==0){c=String.format("{0:F2}",(e-f)/(220-b-f))}else{d=d+" Age, Resting or Maximum exercise heart rate cannot be 0."}return[c,d]}};var $UBM_biogenicsCal_Calculators_CorrectedSerumCaCalculator=function(){};$UBM_biogenicsCal_Calculators_CorrectedSerumCaCalculator.prototype={calculate:function(b){var c=4;var e=parseFloat(Type.cast(b[0],String));var d=parseFloat(Type.cast(b[1],String));var a=((c!==0&&e!==0&&d!==0)?String.format("{0:F2}",(c-e)*0.8+d):"");return[a]}};var $UBM_biogenicsCal_Calculators_CorrectedSerumSodiumCalculator=function(){};$UBM_biogenicsCal_Calculators_CorrectedSerumSodiumCalculator.prototype={calculate:function(b){var a="";var d=parseFloat(Type.cast(b[0],String));var e=parseFloat(Type.cast(b[1],String));if(d!==0&&e!==0){var c=d+(e-100)/100*1.6;a=String.format("{0:F2}",c)}return[a]}};var $UBM_biogenicsCal_Calculators_CreatinineClearanceCockcroftGaultCalculator=function(){};$UBM_biogenicsCal_Calculators_CreatinineClearanceCockcroftGaultCalculator.prototype={calculate:function(e){var h=Type.cast(e[0],String).equals("1");var g=parseFloat(Type.cast(e[1],String));var f=parseFloat(Type.cast(e[3],String));var c=parseFloat(Type.cast(e[2],String));var b=((g!==0&&c!==0&&f!==0)?String.format("{0:F2} mL/min",(140-g)*c/(f*72)*(h?0.85:1)):"");var i=parseFloat(Type.cast(e[4],String))*0.393700787;var d=(h?45.5:50)+2.3*(i-60);var a=((g!==0&& (i + 0.01) >=60&&d!==0&&f!==0)?String.format("{0:F2} mL/min",(140-g)*d/(f*72)*(h?0.85:1)):"Unable to calculate Creatinine Clearance with Ideal Body Weight. Height should be at least 5 feet/60 inches.");return[b,a]}};var $UBM_biogenicsCal_Calculators_CreatinineClearanceSchwartzCalculator=function(){};$UBM_biogenicsCal_Calculators_CreatinineClearanceSchwartzCalculator.prototype={calculate:function(c){var d=parseFloat(Type.cast(c[0],String));var b=parseFloat(Type.cast(c[1],String));var e=parseFloat(Type.cast(c[2],String));var a="";if(d!==0&&b!==0&&e!==0){a=String.format("{0:F2} mL/min",d*b/e)}return[a]}};var $UBM_biogenicsCal_Calculators_EdinburghPostNatalDepressionScaleCalculator=function(){};$UBM_biogenicsCal_Calculators_EdinburghPostNatalDepressionScaleCalculator.prototype={calculate:function(e){var a=0;for(var c=0;c<e.length;c++){var h=e[c];a+=parseInt(h)}var i="";var b="";var g=e[9].toString();var f="";var d=parseInt(g);i=a.toString();if(d>0){f=" For further evaluation."}if(a<=9){b=" - Normal."}else{if(a<=11){b=" - Slightly increased risk of depression."}else{if(a<=15){b=" - Increased risk of depression."}else{if(a>15){b=" - Likely depression."}}}}i=i+b+f;return[i]}};var $UBM_biogenicsCal_Calculators_GlasgowCalculator=function(){};$UBM_biogenicsCal_Calculators_GlasgowCalculator.prototype={calculate:function(a){var f=0;var e="";for(var d=0;d<a.length;d++){var c=a[d];var b=parseInt(c);if(b===0){f=0;break}f+=b}if(f<=8){e="Severe"}else{if(f>8&&f<13){e="Moderate"}else{if(f>=13){e="Mild"}}}return[f.toString()+" - "+e]}};var $UBM_biogenicsCal_Calculators_HeartRateCalculator=function(){};$UBM_biogenicsCal_Calculators_HeartRateCalculator.prototype={calculate:function(b){var c=parseFloat(Type.cast(b[0],String));var a=((c>0)?String.format("{0:F1} bpm",60/(c/1000)):"");return[a]}};var $UBM_biogenicsCal_Calculators_HeartRateFromEKGCalculator=function(){};$UBM_biogenicsCal_Calculators_HeartRateFromEKGCalculator.prototype={calculate:function(b){var c=parseFloat(Type.cast(b[0],String));var a=((c>0)?String.format("{0:F1} bpm",60/(c/1000)):"");return[a]}};var $UBM_biogenicsCal_Calculators_HendersonHasselbachCalculator=function(){};$UBM_biogenicsCal_Calculators_HendersonHasselbachCalculator.prototype={calculate:function(a){var d=parseFloat(Type.cast(a[0],String));var c=parseFloat(Type.cast(a[1],String));var b=((d!==0&&c!==0)?String.format("{0:F2}",6.1+$biogenicsWebCalc_Missing_Missing.log10(d/(0.03*c))):"");return[b]}};var $UBM_biogenicsCal_Calculators_IdealBodyWeightCalculator=function(){};$UBM_biogenicsCal_Calculators_IdealBodyWeightCalculator.prototype={calculate:function(b){var a=Type.cast(b[0],String).equals("1");var d=parseFloat(Type.cast(b[1],String))*0.393700787;var e="";var c=((d!==0)?String.format("{0:F1} kg",(a?45.5:50)+2.3*(d-60)):"");if($biogenicsWebCalc_Missing_Missing.toInt32(d)<60){e="** This formula is designed to estimate the IBW for people 60 inches (5 ft) tall and above. The IBW value is only an estimate and you should consult your doctor prior to making any dietary changes."}return[c,e]}};var $UBM_biogenicsCal_Calculators_IronDeficitCalculator=function(){};$UBM_biogenicsCal_Calculators_IronDeficitCalculator.prototype={calculate:function(a){var e=parseFloat(Type.cast(a[0],String));var f=parseFloat(Type.cast(a[1],String));var b=((e>=35)?15:13);var d=((e>=35)?500:(15*e));var c="";if(e!==0&&f!==0){c=String.format("{0:F1} mg",e*(b-f)*2.4+d)}return[c]}};var $UBM_biogenicsCal_Calculators_LDLCholesterolCalculator=function(){};$UBM_biogenicsCal_Calculators_LDLCholesterolCalculator.prototype={calculate:function(b){var d=parseFloat(Type.cast(b[0],String));var c=parseFloat(Type.cast(b[1],String));var e=parseFloat(Type.cast(b[2],String));var a=((d!==0&&c!==0&&e!==0)?String.format("{0:F2} mg/dl",d-c-e/5):"");return[a]}};var $UBM_biogenicsCal_Calculators_LeanBodyWeightCalculator=function(){};$UBM_biogenicsCal_Calculators_LeanBodyWeightCalculator.prototype={calculate:function(c){var a="";var b=Type.cast(c[0],String).equals("1");var f=parseFloat(Type.cast(c[1],String));var d=parseFloat(Type.cast(c[2],String));if(f!==0&&d!==0){var e;if(b){e=1.07*d-148*Math.pow(d/f,2)}else{e=1.1*d-128*Math.pow(d/f,2)}a=String.format("{0:F1} kg",e)}else{a=""}return[a]}};var $UBM_biogenicsCal_Calculators_ModifiedAlvaradoCalculator=function(){};$UBM_biogenicsCal_Calculators_ModifiedAlvaradoCalculator.prototype={calculate:function(b){var f=0;for(var d=0;d<b.length;d++){var c=b[d];f+=parseInt(c)}var e=f+" / 9";var a="";if(f<=4){a="Acute appendicitis unlikely"}else{if(f<=6){a="Compatible with acute appendicitis but inconclusive for appendicectomy"}else{if(f<=9){a="Probable acute appendicitis"}}}return[e,a]}};var $UBM_biogenicsCal_Calculators_NottinghamEczemaCalculator=function(){};$UBM_biogenicsCal_Calculators_NottinghamEczemaCalculator.prototype={calculate:function(b){var f=0;for(var d=0;d<b.length;d++){var c=b[d];f+=parseInt(c)}var e=f+" / 15";var a="";if(f<=8){a="Mild. Manage in primary care."}else{if(f<=11){a="Moderate. Consider dermatology referral."}else{if(f<=15){a="Severe. Refer to dermatology."}}}return[e,a]}};var $UBM_biogenicsCal_Calculators_NumberNeededToHarmCalculator=function(){};$UBM_biogenicsCal_Calculators_NumberNeededToHarmCalculator.prototype={calculate:function(c){var d=parseFloat(Type.cast(c[0],String));var b=parseFloat(Type.cast(c[1],String));var a=((b!==0&&d!==0)?String.format("{0:F2}",(b*(d-1)+1)/(b*(d-1)*(1-b))):"");return[a]}};var $UBM_biogenicsCal_Calculators_NumberNeededToTreatCalculator=function(){};$UBM_biogenicsCal_Calculators_NumberNeededToTreatCalculator.prototype={calculate:function(c){var d=parseFloat(Type.cast(c[0],String));var b=parseFloat(Type.cast(c[1],String));var a=((b!==0&&d!==0)?String.format("{0:F2}",(1-b*(1-d))/(b*(1-b)*(1-d))):"");return[a]}};var $UBM_biogenicsCal_Calculators_SodiumDeficitCalculator=function(){};$UBM_biogenicsCal_Calculators_SodiumDeficitCalculator.prototype={calculate:function(d){var g=Type.cast(d[0],String).equals("1");var h=Type.cast(d[0],String).equals("2");var f=Type.cast(d[0],String).equals("3");var c=parseFloat(Type.cast(d[1],String));var a=parseFloat(Type.cast(d[2],String));var e=parseFloat(Type.cast(d[3],String));var b=0.6;if(g){b=0.5}if(h){b=0.5}if(f){b=0.45}var i=((c!==0&&a!==0&&e!==0)?String.format("{0:F2} mEq",b*c*(e-a)):"");if(a>e){return["Desired Na must not be smaller than Serum Na"]}else{return[i]}}};var $UBM_biogenicsCal_Calculators_TargetHeartRateCalculator=function(){};$UBM_biogenicsCal_Calculators_TargetHeartRateCalculator.prototype={calculate:function(c){var d=parseFloat(Type.cast(c[0],String));var f=parseFloat(Type.cast(c[1],String));var b=parseFloat(Type.cast(c[2],String));if(b>0.99){b/=100}var e=null;if(d!==0&&f!==0&&b!==0){var g=205.8-0.685*d;var a=(g-f)*b+f;e=String.format("{0:F1} bpm",a);return[e]}else{return[""]}}};var $UBM_biogenicsCal_Calculators_UrineOutputCalculator=function(){};$UBM_biogenicsCal_Calculators_UrineOutputCalculator.prototype={calculate:function(b){var c=parseFloat(Type.cast(b[0],String));var d=parseFloat(Type.cast(b[1],String));var e=parseFloat(Type.cast(b[2],String));var a=null;if(c!==0&&d!==0&&e!==0){a=String.format("{0:F2} mL/kg/hr",c/(d*e))}else{a=""}return[a]}};var $UBM_biogenicsCal_Calculators_WaterDeficitCalculator=function(){};$UBM_biogenicsCal_Calculators_WaterDeficitCalculator.prototype={calculate:function(d){var g=Type.cast(d[0],String).equals("1");var h=Type.cast(d[0],String).equals("2");var f=Type.cast(d[0],String).equals("3");var c=parseFloat(Type.cast(d[1],String));var a=parseFloat(Type.cast(d[2],String));var e=parseFloat(Type.cast(d[3],String));var b=0.6;if(g){b=0.5}if(h){b=0.5}if(f){b=0.45}var i=((c!==0&&a!==0&&e!==0)?String.format("{0:F2} L",b*c*(a/e-1)):"");if(a<e){return["Serum Na must not be smaller than Desired Na"]}else{return[i]}}};Type.registerClass(null,"biogenicsWebCalc.$Program",$biogenicsWebCalc_$Program,Object);Type.registerClass(global,"biogenicsWebCalc.Missing.Missing",$biogenicsWebCalc_Missing_Missing,Object);Type.registerClass(global,"UBM.biogenicsCal.CalculatorCore.CalculatorInfo",$UBM_biogenicsCal_CalculatorCore_CalculatorInfo,Object);Type.registerClass(global,"UBM.biogenicsCal.CalculatorCore.ChoiceItem",$UBM_biogenicsCal_CalculatorCore_ChoiceItem,Object);Type.registerClass(global,"UBM.biogenicsCal.CalculatorCore.FieldDefinition",$UBM_biogenicsCal_CalculatorCore_FieldDefinition,Object);Type.registerInterface(global,"UBM.biogenicsCal.CalculatorCore.ICalculator",$UBM_biogenicsCal_CalculatorCore_ICalculator,[]);Type.registerClass(global,"UBM.biogenicsCal.CalculatorCore.UnitManager",$UBM_biogenicsCal_CalculatorCore_UnitManager,Object);Type.registerClass(global,"UBM.biogenicsCal.CalculatorCore.ValidationError",$UBM_biogenicsCal_CalculatorCore_ValidationError,Object);Type.registerClass(global,"UBM.biogenicsCal.Calculators.AbbreviatedMentalTestScoreCalculator",$UBM_biogenicsCal_Calculators_AbbreviatedMentalTestScoreCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.ABCDCalculator",$UBM_biogenicsCal_Calculators_ABCDCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.AllowableBloodLossCalculator",$UBM_biogenicsCal_Calculators_AllowableBloodLossCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.AlvaradoCalculator",$UBM_biogenicsCal_Calculators_AlvaradoCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.BicarbDeficitCalculator",$UBM_biogenicsCal_Calculators_BicarbDeficitCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.BishopScoreCalculator",$UBM_biogenicsCal_Calculators_BishopScoreCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.BMICalculator",$UBM_biogenicsCal_Calculators_BMICalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.BodySurfaceAreaCalculator",$UBM_biogenicsCal_Calculators_BodySurfaceAreaCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.BodySurfaceAreaWithoutHeightCalculator",$UBM_biogenicsCal_Calculators_BodySurfaceAreaWithoutHeightCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.BohrDeadSpaceCalculator",$UBM_biogenicsCal_Calculators_BohrDeadSpaceCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.ChronotropicIndexCalculator",$UBM_biogenicsCal_Calculators_ChronotropicIndexCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.CorrectedSerumCaCalculator",$UBM_biogenicsCal_Calculators_CorrectedSerumCaCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.CorrectedSerumSodiumCalculator",$UBM_biogenicsCal_Calculators_CorrectedSerumSodiumCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.CreatinineClearanceCockcroftGaultCalculator",$UBM_biogenicsCal_Calculators_CreatinineClearanceCockcroftGaultCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.CreatinineClearanceSchwartzCalculator",$UBM_biogenicsCal_Calculators_CreatinineClearanceSchwartzCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.EdinburghPostNatalDepressionScaleCalculator",$UBM_biogenicsCal_Calculators_EdinburghPostNatalDepressionScaleCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.GlasgowCalculator",$UBM_biogenicsCal_Calculators_GlasgowCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.HeartRateCalculator",$UBM_biogenicsCal_Calculators_HeartRateCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.HeartRateFromEKGCalculator",$UBM_biogenicsCal_Calculators_HeartRateFromEKGCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.HendersonHasselbachCalculator",$UBM_biogenicsCal_Calculators_HendersonHasselbachCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.IdealBodyWeightCalculator",$UBM_biogenicsCal_Calculators_IdealBodyWeightCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.IronDeficitCalculator",$UBM_biogenicsCal_Calculators_IronDeficitCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.LDLCholesterolCalculator",$UBM_biogenicsCal_Calculators_LDLCholesterolCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.LeanBodyWeightCalculator",$UBM_biogenicsCal_Calculators_LeanBodyWeightCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.ModifiedAlvaradoCalculator",$UBM_biogenicsCal_Calculators_ModifiedAlvaradoCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.NottinghamEczemaCalculator",$UBM_biogenicsCal_Calculators_NottinghamEczemaCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.NumberNeededToHarmCalculator",$UBM_biogenicsCal_Calculators_NumberNeededToHarmCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.NumberNeededToTreatCalculator",$UBM_biogenicsCal_Calculators_NumberNeededToTreatCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.SodiumDeficitCalculator",$UBM_biogenicsCal_Calculators_SodiumDeficitCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.TargetHeartRateCalculator",$UBM_biogenicsCal_Calculators_TargetHeartRateCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.UrineOutputCalculator",$UBM_biogenicsCal_Calculators_UrineOutputCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);Type.registerClass(global,"UBM.biogenicsCal.Calculators.WaterDeficitCalculator",$UBM_biogenicsCal_Calculators_WaterDeficitCalculator,Object,$UBM_biogenicsCal_CalculatorCore_ICalculator);$UBM_biogenicsCal_CalculatorCore_ValidationError.erroR_TAG="InputValidationError";$biogenicsWebCalc_$Program.$main();
